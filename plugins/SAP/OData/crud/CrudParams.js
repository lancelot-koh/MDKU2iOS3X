"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseODataCruder_1 = require("./BaseODataCruder");
var ErrorMessage_1 = require("../../ErrorHandling/ErrorMessage");
var CrudParams = /** @class */ (function () {
    function CrudParams(params, operation) {
        this.setServiceUrl(params);
        this.setEntitySetName(params);
        this.setQueryString(params);
        this.setReadLink(params);
        if (this.serviceUrl == null) {
            throw new Error(ErrorMessage_1.ErrorMessage.format(ErrorMessage_1.ErrorMessage.ODATA_MALFORMED_PARAMS, CrudParams.MALFORMEDPARAM, CrudParams.SERVICEURLKEY));
        }
        if (this.entitySetName == null) {
            throw new Error(ErrorMessage_1.ErrorMessage.format(ErrorMessage_1.ErrorMessage.ODATA_MALFORMED_PARAMS, CrudParams.MALFORMEDPARAM, CrudParams.ENTITYSETNAMEKEY));
        }
        // if operation is create no need to check other settings
        if (operation === BaseODataCruder_1.ODataCrudOperation.Create) {
            return;
        }
        if (this.readLink == null && this.queryString == null) {
            throw new Error(ErrorMessage_1.ErrorMessage.format(ErrorMessage_1.ErrorMessage.ODATA_READLINK_MISSING, operation.toString()));
        }
    }
    CrudParams.prototype.getServiceUrl = function () {
        return this.serviceUrl;
    };
    CrudParams.prototype.getEntitySetName = function () {
        return this.entitySetName;
    };
    CrudParams.prototype.getQueryString = function () {
        return this.queryString;
    };
    CrudParams.prototype.getReadLink = function () {
        return this.readLink;
    };
    CrudParams.prototype.setServiceUrl = function (params) {
        var value = params[CrudParams.SERVICEURLKEY];
        if (typeof value === 'string' && value !== '' && this.serviceUrl == null) {
            this.serviceUrl = value;
        }
    };
    CrudParams.prototype.setEntitySetName = function (params) {
        var value = params[CrudParams.ENTITYSETNAMEKEY];
        if (typeof value === 'string' && value !== '') {
            this.entitySetName = value;
        }
    };
    CrudParams.prototype.setQueryString = function (params) {
        var value = params[CrudParams.QUERYOPTIONSKEY];
        if (typeof value === 'string' && value !== '') {
            this.queryString = value;
        }
    };
    CrudParams.prototype.setReadLink = function (params) {
        var value = params[CrudParams.READLINKKEY];
        if (typeof value === 'string' && value !== '') {
            this.readLink = value;
        }
    };
    CrudParams.ENTITYSETNAMEKEY = 'entitySet';
    CrudParams.QUERYOPTIONSKEY = 'queryOptions';
    CrudParams.READLINKKEY = 'readLink';
    CrudParams.MALFORMEDPARAM = 'Malformed parameter:';
    CrudParams.SERVICEURLKEY = 'serviceUrl';
    return CrudParams;
}());
exports.CrudParams = CrudParams;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3J1ZFBhcmFtcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNydWRQYXJhbXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxREFBdUQ7QUFDdkQsaUVBQWdFO0FBRWhFO0lBWUUsb0JBQW1CLE1BQVcsRUFBRSxTQUE2QjtRQUMzRCxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFekIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzVCLE1BQU0sSUFBSSxLQUFLLENBQUMsMkJBQVksQ0FBQyxNQUFNLENBQUMsMkJBQVksQ0FBQyxzQkFBc0IsRUFBRSxVQUFVLENBQUMsY0FBYyxFQUNoRyxVQUFVLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztRQUMvQixDQUFDO1FBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQy9CLE1BQU0sSUFBSSxLQUFLLENBQUMsMkJBQVksQ0FBQyxNQUFNLENBQUMsMkJBQVksQ0FBQyxzQkFBc0IsRUFBRSxVQUFVLENBQUMsY0FBYyxFQUNoRyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUM7UUFFRCx5REFBeUQ7UUFDekQsRUFBRSxDQUFDLENBQUMsU0FBUyxLQUFLLG9DQUFrQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDNUMsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN0RCxNQUFNLElBQUksS0FBSyxDQUFDLDJCQUFZLENBQUMsTUFBTSxDQUFDLDJCQUFZLENBQUMsc0JBQXNCLEVBQUUsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNsRyxDQUFDO0lBQ0gsQ0FBQztJQUVNLGtDQUFhLEdBQXBCO1FBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVNLHFDQUFnQixHQUF2QjtRQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFFTSxtQ0FBYyxHQUFyQjtRQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7SUFFTSxnQ0FBVyxHQUFsQjtRQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFTyxrQ0FBYSxHQUFyQixVQUFzQixNQUFXO1FBQy9CLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDN0MsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLEtBQUssS0FBSyxFQUFFLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3pFLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQzFCLENBQUM7SUFDSCxDQUFDO0lBRU8scUNBQWdCLEdBQXhCLFVBQXlCLE1BQVc7UUFDbEMsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2hELEVBQUUsQ0FBQyxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxLQUFLLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUM3QixDQUFDO0lBQ0gsQ0FBQztJQUVPLG1DQUFjLEdBQXRCLFVBQXVCLE1BQVc7UUFDaEMsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMvQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssS0FBSyxRQUFRLElBQUksS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDOUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDM0IsQ0FBQztJQUNILENBQUM7SUFFTyxnQ0FBVyxHQUFuQixVQUFvQixNQUFXO1FBQzdCLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0MsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLEtBQUssUUFBUSxJQUFJLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLENBQUM7SUFDSCxDQUFDO0lBL0V1QiwyQkFBZ0IsR0FBVyxXQUFXLENBQUM7SUFDdkMsMEJBQWUsR0FBVyxjQUFjLENBQUM7SUFDekMsc0JBQVcsR0FBVyxVQUFVLENBQUM7SUFDakMseUJBQWMsR0FBVyxzQkFBc0IsQ0FBQztJQUNoRCx3QkFBYSxHQUFXLFlBQVksQ0FBQztJQTRFL0QsaUJBQUM7Q0FBQSxBQWpGRCxJQWlGQztBQWpGWSxnQ0FBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9EYXRhQ3J1ZE9wZXJhdGlvbiB9IGZyb20gJy4vQmFzZU9EYXRhQ3J1ZGVyJztcbmltcG9ydCB7IEVycm9yTWVzc2FnZSB9IGZyb20gJy4uLy4uL0Vycm9ySGFuZGxpbmcvRXJyb3JNZXNzYWdlJztcblxuZXhwb3J0IGNsYXNzIENydWRQYXJhbXMge1xuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBFTlRJVFlTRVROQU1FS0VZOiBzdHJpbmcgPSAnZW50aXR5U2V0JztcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgUVVFUllPUFRJT05TS0VZOiBzdHJpbmcgPSAncXVlcnlPcHRpb25zJztcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgUkVBRExJTktLRVk6IHN0cmluZyA9ICdyZWFkTGluayc7XG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IE1BTEZPUk1FRFBBUkFNOiBzdHJpbmcgPSAnTWFsZm9ybWVkIHBhcmFtZXRlcjonO1xuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBTRVJWSUNFVVJMS0VZOiBzdHJpbmcgPSAnc2VydmljZVVybCc7XG5cbiAgcHJpdmF0ZSBzZXJ2aWNlVXJsOiBzdHJpbmc7XG4gIHByaXZhdGUgZW50aXR5U2V0TmFtZTogc3RyaW5nO1xuICBwcml2YXRlIHF1ZXJ5U3RyaW5nOiBzdHJpbmc7XG4gIHByaXZhdGUgcmVhZExpbms6IHN0cmluZztcblxuICBwdWJsaWMgY29uc3RydWN0b3IocGFyYW1zOiBhbnksIG9wZXJhdGlvbjogT0RhdGFDcnVkT3BlcmF0aW9uKSB7XG4gICAgdGhpcy5zZXRTZXJ2aWNlVXJsKHBhcmFtcyk7XG4gICAgdGhpcy5zZXRFbnRpdHlTZXROYW1lKHBhcmFtcyk7XG4gICAgdGhpcy5zZXRRdWVyeVN0cmluZyhwYXJhbXMpO1xuICAgIHRoaXMuc2V0UmVhZExpbmsocGFyYW1zKTtcblxuICAgIGlmICh0aGlzLnNlcnZpY2VVcmwgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKEVycm9yTWVzc2FnZS5mb3JtYXQoRXJyb3JNZXNzYWdlLk9EQVRBX01BTEZPUk1FRF9QQVJBTVMsIENydWRQYXJhbXMuTUFMRk9STUVEUEFSQU0sIFxuICAgICAgICBDcnVkUGFyYW1zLlNFUlZJQ0VVUkxLRVkpKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5lbnRpdHlTZXROYW1lID09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihFcnJvck1lc3NhZ2UuZm9ybWF0KEVycm9yTWVzc2FnZS5PREFUQV9NQUxGT1JNRURfUEFSQU1TLCBDcnVkUGFyYW1zLk1BTEZPUk1FRFBBUkFNLCBcbiAgICAgICAgQ3J1ZFBhcmFtcy5FTlRJVFlTRVROQU1FS0VZKSk7XG4gICAgfVxuXG4gICAgLy8gaWYgb3BlcmF0aW9uIGlzIGNyZWF0ZSBubyBuZWVkIHRvIGNoZWNrIG90aGVyIHNldHRpbmdzXG4gICAgaWYgKG9wZXJhdGlvbiA9PT0gT0RhdGFDcnVkT3BlcmF0aW9uLkNyZWF0ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnJlYWRMaW5rID09IG51bGwgJiYgdGhpcy5xdWVyeVN0cmluZyA9PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoRXJyb3JNZXNzYWdlLmZvcm1hdChFcnJvck1lc3NhZ2UuT0RBVEFfUkVBRExJTktfTUlTU0lORywgb3BlcmF0aW9uLnRvU3RyaW5nKCkpKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0U2VydmljZVVybCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnNlcnZpY2VVcmw7XG4gIH1cblxuICBwdWJsaWMgZ2V0RW50aXR5U2V0TmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmVudGl0eVNldE5hbWU7XG4gIH1cblxuICBwdWJsaWMgZ2V0UXVlcnlTdHJpbmcoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVN0cmluZztcbiAgfVxuXG4gIHB1YmxpYyBnZXRSZWFkTGluaygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnJlYWRMaW5rO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRTZXJ2aWNlVXJsKHBhcmFtczogYW55KTogdm9pZCB7XG4gICAgbGV0IHZhbHVlID0gcGFyYW1zW0NydWRQYXJhbXMuU0VSVklDRVVSTEtFWV07XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgIT09ICcnICYmIHRoaXMuc2VydmljZVVybCA9PSBudWxsKSB7XG4gICAgICB0aGlzLnNlcnZpY2VVcmwgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNldEVudGl0eVNldE5hbWUocGFyYW1zOiBhbnkpOiB2b2lkIHtcbiAgICBsZXQgdmFsdWUgPSBwYXJhbXNbQ3J1ZFBhcmFtcy5FTlRJVFlTRVROQU1FS0VZXTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZSAhPT0gJycpIHtcbiAgICAgIHRoaXMuZW50aXR5U2V0TmFtZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc2V0UXVlcnlTdHJpbmcocGFyYW1zOiBhbnkpOiB2b2lkIHtcbiAgICBsZXQgdmFsdWUgPSBwYXJhbXNbQ3J1ZFBhcmFtcy5RVUVSWU9QVElPTlNLRVldO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlICE9PSAnJykge1xuICAgICAgdGhpcy5xdWVyeVN0cmluZyA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc2V0UmVhZExpbmsocGFyYW1zOiBhbnkpOiB2b2lkIHtcbiAgICBsZXQgdmFsdWUgPSBwYXJhbXNbQ3J1ZFBhcmFtcy5SRUFETElOS0tFWV07XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgIT09ICcnKSB7XG4gICAgICB0aGlzLnJlYWRMaW5rID0gdmFsdWU7XG4gICAgfVxuICB9XG59XG4iXX0=